{"version":3,"sources":["constants.js","services/api.ts","components/upload.tsx","reducers/comments.reducer.ts","action-types/user.ts","reducers/user.reducer.ts","action-types/auth.ts","reducers/auth.reducer.ts","reducers/index.ts","actions/user.action.ts","components/users.tsx","components/comments-list.tsx","components/filecomments.tsx","components/login.tsx","components/auditors.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["apiUri","getComments","commentor","a","axios","get","comment","getUser","userId","user","getUsers","users","getFileComments","fileId","createUser","name","post","loginAuditor","email","password","auditor","deleteUser","delete","Alert","props","elevation","variant","Upload","history","useHistory","useState","setuser","setusers","selectedFile","setselectedFile","setname","snackbarOpenError","setsnackbarOpenError","setsnackbarOpenSuccess","uploadProgress","setuploadProgress","onFileChange","event","config","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","target","files","filePayload","FormData","append","then","res","status","push","catch","err","console","log","useEffect","data","loadUsers","renderMenuItems","_id","MenuItem","value","handleSnackBarCloseError","reason","handleSnackBarCloseSuccess","LinearProgressWithLabel","Box","display","alignItems","width","mr","minWidth","Typography","color","Snackbar","open","autoHideDuration","onClose","severity","length","style","id","type","onChange","htmlFor","Button","component","FormControl","InputLabel","Select","label","title","map","initialState","ADD_USERS","LOGIN","combineReducers","auth","state","comments","addUsers","Users","dispatch","useDispatch","aUser","setaUser","useSelector","addUser","Container","Grid","container","height","item","xs","List","ListItem","onClick","ListItemText","e","useStyles","makeStyles","theme","createStyles","root","flexGrow","nested","paddingLeft","spacing","FilesList","setfiles","commentsCount","setcommentsCount","setOpen","dialogOpen","setdialogOpen","React","dateRange","setDateRange","duplicates","setduplicates","duplicatesOpen","setduplicatesOpen","employeeName","setemployeeName","isGettingData","setisGettingData","location","pathname","slice","username","mutatedComments","mutatedComment","date","moment","format","grouped","_","chain","groupBy","key","sortedByDate","sort","b","diff","isEmpty","count","reduce","acc","extractComments","sortedByInstagram","concat","apply","values","h","filter","sortedByCount","sortedByDateRange","sorted","isBetween","startDate","endDate","loadFiles","renderCommentsInsideAccordion","instagram","classes","handleDuplicatesOpen","onDeleteUser","closeConfirmationDialog","ConfirmationDialog","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","className","toggle","range","duplicatesCount","duplicatesCountSpread","totalValid","ListItemAvatar","Avatar","primary","secondary","button","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","duplicate","ListItemIcon","DoubleArrow","textAlign","reports","file","Accordion","TransitionProps","AccordionSummary","expandIcon","ExpandMoreOutlined","AccordionDetails","renderAccordion","marginTop","FileComments","setcomments","media_comments","loadFileComments","Login","loginForm","setloginForm","onFormFieldChange","login","localStorage","setItem","maxWidth","Auditor","store","createStore","reducer","navDisplayFlex","justifyContent","linkText","textDecoration","textTransform","Routes","getItem","AppBar","Toolbar","IconButton","edge","aria-label","Home","fontSize","undefined","to","clear","window","href","origin","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d4be26b.chunk.js","sourcesContent":["// ENV's\nconst DEV = \"DEV\";\nconst PROD = \"PROD\";\n\nconst CURRENTENV = PROD;\n\nconst prodUrl = \"http://13.229.71.34:8080\";\nconst localDevUrl = \"http://localhost:5000\";\n\nexport const apiUri = CURRENTENV === DEV ? localDevUrl : prodUrl;\n","import axios from 'axios'\nimport { apiUri } from '../constants';\nimport IAuditor from '../interfaces/IAuditor';\n\nexport const getComments = async (commentor: string) => {\n    const comment = await axios.get(`${apiUri}/get-comments?commentor=${commentor}`)\n    return comment;\n}\n\nexport const getUser = async (userId: string) => {\n    const user = await axios.get(`${apiUri}/get-user/${userId}`)\n    return user;\n}\n\nexport const getUsers = async () => {\n    const users = await axios.get(`${apiUri}/get-users`)\n    return users;\n}\n\nexport const getFiles = async (commentor: string) => {\n    const users = await axios.get(`${apiUri}/get-files?commentor=${commentor}`)\n    return users;\n}\n\nexport const getFileComments = async (fileId: string) => {\n    const users = await axios.get(`${apiUri}/get-file-comments?fileId=${fileId}`)\n    return users;\n}\n\nexport const createUser = async (name: string) => {\n    const user = await axios.post(`${apiUri}/create-user`, {name: name});\n    return user;\n}\n\nexport const loginAuditor = async ({email, password}: IAuditor) => {\n    const auditor = await axios.post(`${apiUri}/login-auditor`, {email, password})\n    return auditor;\n}\n\nexport const deleteUser = async (userId: string) => {\n    const user = await axios.delete(`${apiUri}/delete-user/${userId}`, )\n    return user;\n}\n","import { Box, Button, FormControl, InputLabel, MenuItem, Select, Snackbar, Typography } from '@material-ui/core'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useHistory } from 'react-router-dom'\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\nimport { apiUri } from '../constants';\nimport { getUsers } from '../services/api';\nimport LinearProgress from '@material-ui/core/LinearProgress/LinearProgress';\n\nfunction Alert(props: AlertProps) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function Upload() {\n    const history = useHistory()\n    const [user, setuser] = useState('');\n    const [users, setusers] = useState([])\n    const [selectedFile, setselectedFile] = useState();\n    const [name, setname] = useState('')\n    const [snackbarOpenError, setsnackbarOpenError] = useState(false)\n    const [snackbarOpenSuccess, setsnackbarOpenSuccess] = useState(false)\n    const [uploadProgress, setuploadProgress] = useState(0)\n    useEffect(() => {\n        async function loadUsers() {\n            const { data } = await getUsers();\n            setusers(data);\n        }\n        loadUsers()\n    }, [])\n\n    function onFileChange(event: any) {\n\n        const config = {\n            onUploadProgress: function (progressEvent) {\n                var percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total)\n                setuploadProgress(percentCompleted);\n            }\n        }\n\n        setselectedFile(event.target.files[0])\n        setname(event.target.files[0].name)\n        const filePayload = new FormData();\n        filePayload.append('file', event.target.files[0])\n        filePayload.append('commentor', user)\n        axios.post(`${apiUri}/upload-file`, filePayload, config).then((res) => {\n            setname('')\n            if (res.status === 200) {\n                history.push('/users')\n            }\n        }).catch(err => {\n            console.log(err);\n            setname('')\n            setsnackbarOpenError(true)\n        })\n    }\n\n    const renderUploadButton = () => (<div>\n        <input\n            style={{ display: 'none' }}\n            id=\"raised-button-file\"\n            type=\"file\"\n            onChange={onFileChange}\n        />\n        <label htmlFor=\"raised-button-file\">\n            <Button component=\"span\" variant=\"outlined\">\n                Upload\n            </Button>\n        </label>\n        {selectedFile && <h1>{name}</h1>}\n    </div>)\n\n    const renderMenuItems = ({ _id, name }) => (\n        <MenuItem value={_id} key={_id}>\n            {name}\n        </MenuItem>\n    )\n\n    const renderUserSelect = () => (\n        <FormControl>\n            <InputLabel>\n                Choose A User\n            </InputLabel>\n            <Select onChange={({ target }: any) => setuser(target.value)} style={{ width: '200px' }} label=\"Choose A User\" title=\"Choose A User\">\n                {users && users.map(renderMenuItems)}\n            </Select>\n        </FormControl>\n    )\n\n    const handleSnackBarCloseError = (event?: React.SyntheticEvent, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setsnackbarOpenError(false);\n    };\n\n\n    const handleSnackBarCloseSuccess = (event?: React.SyntheticEvent, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setsnackbarOpenSuccess(false);\n    };\n\n\n    const renderSnackBar = () => (<Snackbar open={snackbarOpenError} autoHideDuration={10000} onClose={handleSnackBarCloseError}>\n        <Alert onClose={handleSnackBarCloseError} severity=\"error\">\n            Error Uploading Might be and invalid file or the comments in file are already stored in the db\n        </Alert>\n    </Snackbar>)\n\n\n    const renderSnackBarSuccess = () => (<Snackbar open={snackbarOpenError} autoHideDuration={10000} onClose={handleSnackBarCloseSuccess}>\n        <Alert onClose={handleSnackBarCloseSuccess} severity=\"success\">\n            File Uploaded See User Tab\n    </Alert>\n    </Snackbar>)\n\n    function LinearProgressWithLabel(props) {\n        return (\n            <Box display=\"flex\" alignItems=\"center\">\n                <Box width=\"100%\" mr={1}>\n                    <LinearProgress variant=\"determinate\" {...props} />\n                </Box>\n                <Box minWidth={35}>\n                    <Typography variant=\"body2\" color=\"textSecondary\">{props.value < 100 ? `${Math.round(\n                        props.value,\n                    )}%` : <CheckCircleIcon color=\"primary\" />}</Typography>\n                </Box>\n                {props.value === 100 && 'Parsing Comments. Please Wait for Redirection to the Users Page'}\n            </Box>\n        );\n    }\n\n    const renderProgressCircle = () => <div>\n        <LinearProgressWithLabel value={uploadProgress} />\n    </div>\n\n    return (\n        <div>\n            {renderSnackBarSuccess()}\n            {renderSnackBar()}\n            {user.length > 0 && renderUploadButton()}\n            {renderUserSelect()}\n            {selectedFile && <h1>{name}</h1>}\n            {renderProgressCircle()}\n        </div>\n    )\n}\n","const initialState = []\n\nexport default function comments(state = initialState, {type, comment}) {\n    switch (type) {\n        case \"ADD_COMMENT\":\n          return {\n              ...state,\n            comment,\n          };\n        default:\n          return state;\n      }\n}","export const ADD_USERS = 'ADD_USERS'","import { ADD_USERS } from \"../action-types/user\";\n\nconst initialState = []\n\nexport default function users(state = initialState, {type, users}) {\n    switch (type) {\n        case ADD_USERS:\n          return {\n              ...state,\n            users,\n          };\n        default:\n          return state;\n      }\n}","export const LOGIN = \"LOGIN\"","import { LOGIN } from \"../action-types/auth\";\n\nconst initialState = {\n    email: '',\n    password: '',\n}\n\nexport default function auth(state = initialState, {type, auth}) {\n    switch (type) {\n        case LOGIN:\n          return {\n              ...state,\n            auth,\n          };\n        default:\n          return state;\n      }\n}","import {combineReducers } from 'redux'\nimport comments from './comments.reducer'\nimport users from './user.reducer'\nimport auth from './auth.reducer'\nexport default  combineReducers({\n    auth,\n    comments,\n    users\n})","import { ADD_USERS } from '../action-types/user'\n\nexport const addUsers = (users: Array<any>) => ({\n    type: ADD_USERS,\n    users,\n})","\nimport { Button, Container, Grid, List, ListItem, ListItemText } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { addUsers } from '../actions/user.action'\nimport { createUser, getUsers } from '../services/api'\nimport Typography from '@material-ui/core/Typography/Typography'\nimport TextField from '@material-ui/core/TextField/TextField'\n\nexport default function Users() {\n    const dispatch = useDispatch()\n    const history = useHistory();\n    const [name, setname] = useState('');\n    const [aUser, setaUser] = useState()\n    const { users }: any = useSelector(({ users }: any) => users)\n    useEffect(() => {\n        async function loadUsers() {\n            const { data } = await getUsers();\n            dispatch(addUsers(data))\n        }\n        loadUsers()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [aUser])\n\n    const onNameChange = (e: any) => {\n        setname(e.target.value)\n    }\n\n    const addUser = async () => {\n        const user = await createUser(name);\n        if (user.status === 200) {\n            setaUser(user.data)\n        }\n    }\n\n    const renderUsersList = ({ name, _id }) => (<ListItem key={_id}>\n        <Button variant=\"outlined\" onClick={() => history.push('/files/' + _id)}>\n            <ListItemText>\n                {name}\n            </ListItemText>\n        </Button>\n    </ListItem>)\n\n    return (\n        <div>\n            <Container>\n                <Grid container style={{ height: '100vh' }}>\n                    <Grid item xs={6}>\n                        <List>\n                            {users && users.map(renderUsersList)}\n                        </List>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Typography>Add User</Typography>\n                        <TextField label=\"Employee Name\" type=\"name\" onChange={onNameChange} name=\"name\" />\n                        {name.length > 0 && <Button color=\"secondary\" onClick={addUser} variant=\"contained\">Add User</Button>}\n                    </Grid>\n                </Grid>\n            </Container>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { deleteUser, getComments, getUser } from '../services/api';\nimport { useHistory } from 'react-router-dom';\nimport _ from 'lodash'\nimport moment from 'moment'\nimport { Accordion, AccordionDetails, AccordionSummary, Button, Collapse, Grid, ListItemIcon, Typography, } from '@material-ui/core';\nimport { DoubleArrow, ExpandLess, ExpandMore, ExpandMoreOutlined } from '@material-ui/icons';\nimport { DateRangePicker } from \"materialui-daterange-picker\";\n\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ImageIcon from '@material-ui/icons/Image';\nimport WorkIcon from '@material-ui/icons/Work';\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress/CircularProgress';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n            width: '90vw'\n        },\n        nested: {\n            paddingLeft: theme.spacing(4),\n        }\n    }),\n);\n\nexport default function FilesList() {\n    const history = useHistory()\n    const [files, setfiles] = useState([])\n    const [commentsCount, setcommentsCount] = useState(0);\n    const [open, setOpen] = useState(true);\n    const [dialogOpen, setdialogOpen] = useState(false);\n    const [dateRange, setDateRange]: any = React.useState();\n    const [duplicates, setduplicates]: Array<any> = useState([])\n    const [duplicatesOpen, setduplicatesOpen] = useState(false)\n    const [employeeName, setemployeeName] = useState('')\n    const [isGettingData, setisGettingData] = useState(true);\n    const pathname = history.location.pathname\n    const userId = pathname.slice(7, 2000);\n    useEffect(() => {\n        async function loadFiles() {\n            const data = await getComments(userId);\n            const username = await getUser(userId);\n            if (data.status === 200 && username.status === 200) {\n                setisGettingData(false);\n                const { name } = username.data;\n                const { comments } = data.data;\n                setemployeeName(name)\n                const mutatedComments = comments.map((mutatedComment: any) => ({\n                    ...mutatedComment,\n                    date: moment(mutatedComment.date).format('MMMM DD YYYY')\n                }))\n\n                const grouped =\n                    _.chain(mutatedComments)\n                        // Group the elements of Array based on `color` property\n                        .groupBy(\"date\")\n                        // `key` is group's name (color), `value` is the array of objects\n                        .map((value, key) => {\n                            return {\n                                date: key, comments: value\n                            }\n                        })\n                        .value()\n\n                const sortedByDate = grouped.sort((a, b) => moment(a.date).diff(b.date))\n\n                if (_.isEmpty(dateRange)) {\n                    setfiles(sortedByDate)\n                    const count = sortedByDate.reduce((acc, item) => {\n                        return acc += item.comments.length\n                    }, 0)\n\n                    const extractComments = sortedByDate.map(({ comments }) => {\n                        return comments;\n                    })\n\n                    const sortedByInstagram = _.chain([].concat.apply([], extractComments)).groupBy('instagram').map((values, key) => ({ key, count: values.length })).value()\n\n                    const h = sortedByInstagram.filter((e) => e.count > 1)\n\n                    const sortedByCount = _.chain(h).groupBy('count').map((values, key) =>\n                        ({ key, values })\n                    ).value()\n                    setduplicates(sortedByCount)\n                    setcommentsCount(count)\n                } else {\n                    const sortedByDateRange = sortedByDate.filter(sorted => {\n                        return moment(sorted.date).isBetween(moment(dateRange.startDate), moment(dateRange.endDate))\n                    })\n                    setfiles(sortedByDateRange)\n                    const count = sortedByDateRange.reduce((acc, item) => {\n                        return acc += item.comments.length\n                    }, 0)\n\n                    const extractComments = sortedByDateRange.map(({ comments }) => {\n                        return comments;\n                    })\n\n                    const sortedByInstagram = _.chain([].concat.apply([], extractComments)).groupBy('instagram').map((values, key) => ({ key, count: values.length })).value()\n\n                    const h = sortedByInstagram.filter((e) => e.count > 1)\n\n                    const sortedByCount = _.chain(h).groupBy('count').map((values, key) =>\n                        ({ key, values })\n                    ).value()\n                    setduplicates(sortedByCount)\n                    setcommentsCount(count)\n                }\n            }\n        }\n        loadFiles();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [dateRange])\n\n    const renderEmptiness = () => (<h1>There is nothing here</h1>)\n\n    const renderCommentsInsideAccordion = (comments: Array<any>) => {\n\n        return comments.map(comment => <ListItem><ListItemText>{comment.comment} - {comment.instagram}</ListItemText></ListItem>)\n    }\n\n    const renderAccordion = ({ date, comments }) => (<Accordion TransitionProps={{ unmountOnExit: true }} style={{ width: '30vw' }}>\n        <AccordionSummary\n            expandIcon={<ExpandMoreOutlined />}\n        >\n            <h3>{date}</h3>\n        </AccordionSummary>\n        <AccordionDetails>\n            <List>\n                {renderCommentsInsideAccordion(comments)}\n            </List>\n\n        </AccordionDetails>\n    </Accordion>)\n\n    const toggle = () => setOpen(true);\n\n    const classes = useStyles();\n\n    const handleDuplicatesOpen = () => setduplicatesOpen(!duplicatesOpen);\n\n    const reports = () => {\n\n        const duplicatesCount = duplicates.reduce((acc, item) => {\n            return acc += item.values.length;\n        }, 0)\n\n        const duplicatesCountSpread = duplicates.reduce((acc, item) => {\n            return acc += (item.values.length * item.key);\n        }, 0)\n\n        const totalValid = (commentsCount - duplicatesCountSpread) + duplicatesCount;\n\n        return <List>\n            <Typography>Reports for Selected Period for {employeeName}</Typography>\n            <ListItem>\n                <ListItemAvatar>\n                    <Avatar>\n                        <ImageIcon />\n                    </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary={commentsCount} secondary='Total Comments in this Period' />\n            </ListItem>\n            <ListItem>\n                <ListItemAvatar>\n                    <Avatar>\n                        <WorkIcon />\n                    </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary={duplicatesCount} secondary=\"Number of Duplicates If Merged\" />\n            </ListItem>\n            <ListItem button onClick={handleDuplicatesOpen}>\n                <ListItemText primary=\"Breakdown\" />\n                {duplicatesOpen ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={duplicatesOpen} timeout=\"auto\" unmountOnExit>\n                <List>\n                    {duplicates && duplicates.map((duplicate: any) => (<ListItem className={classes.nested}>\n                        <ListItemIcon>\n                            <DoubleArrow />\n                        </ListItemIcon>\n                        <ListItemText primary={`${duplicate.key}'s`} secondary={duplicate.values.length} style={{ textAlign: 'center' }} />\n                    </ListItem>))}\n                </List>\n            </Collapse>\n            <ListItem>\n                <ListItemAvatar>\n                    <Avatar>\n                        <BeachAccessIcon />\n                    </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary={totalValid} secondary=\"Valid Comments\" />\n            </ListItem>\n        </List>\n    }\n\n    const onDeleteUser = async () => {\n        const user = await deleteUser(userId);\n        if (user.status === 200) {\n            history.push('/users')\n        }\n    }\n\n    const renderDeleteButton = () => {\n        return <div style={{ marginTop: '20px' }} onClick={() => {\n            setdialogOpen(true)\n        }}><Button color=\"secondary\" variant=\"contained\">Delete User</Button></div>\n    }\n\n    const closeConfirmationDialog = () => {\n        setdialogOpen(false)\n    }\n\n    const ConfirmationDialog = () => {\n        return <div>\n            <Dialog\n                open={dialogOpen}\n                onClose={closeConfirmationDialog}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"Delete An Employee\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        Deleting an employee may indicate removal or termination of service. Please make sure you are certain this you have no business needing this employee's data\n          </DialogContentText>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        Are you sure you want to remove {employeeName} ?\n                        </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={closeConfirmationDialog} color=\"primary\">\n                        Cancel\n          </Button>\n                    <Button onClick={onDeleteUser} color=\"primary\" autoFocus>\n                        Proceed and Delete {employeeName} Associated Data\n          </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    }\n\n    return (\n\n        <div>\n            <div className={classes.root}>\n                <Grid container spacing={3}>\n                    <Grid item xs>\n                        <DateRangePicker\n                            open={open}\n                            toggle={toggle}\n                            onChange={(range) => setDateRange(range)}\n                        />\n                    </Grid>\n                    {isGettingData ? <CircularProgress /> : <Grid item xs>\n                        {reports()}\n                        {files.length < 1 && renderEmptiness()}\n                        {files && files.map(file => (renderAccordion(file)))}\n                    </Grid>}\n                </Grid>\n            </div>\n            {renderDeleteButton()}\n            <ConfirmationDialog />\n        </div>\n    );\n}\n","import { List, ListItem, ListItemText } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { getFileComments } from '../services/api';\n\nexport default function FileComments() {\n    const history = useHistory();\n\n    const [comments, setcomments] = useState([])\n    useEffect(() => {\n        const pathname = history.location.pathname;\n        const fileId = pathname.slice(10, 2000)\n        async function loadFileComments() {\n            const data = await getFileComments(fileId);\n\n            if (data.status === 200) {\n                const { media_comments } = data.data;\n                setcomments(media_comments)\n            }\n        }\n        loadFileComments();\n    }, [history.location.pathname])\n\n    const renderComment = () => (<ListItem>\n        <ListItemText>\n\n        </ListItemText>\n    </ListItem>)\n\n    return (\n        <div>\n            <List>\n\n            </List>\n        </div>\n    )\n}\n","import { Button, Container, Grid, TextField } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { loginAuditor } from '../services/api';\nimport { useDispatch } from 'react-redux';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar/Snackbar';\nimport { authenticate } from '../actions/auth.actions';\nimport { useHistory } from \"react-router-dom\"\n\nfunction Alert(props: AlertProps) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function Login() {\n    const history = useHistory()\n    const [loginForm, setloginForm]: any = useState();\n    const [snackbarOpenError, setsnackbarOpenError] = useState(false)\n    const onFormFieldChange = async (e: any) => {\n        setloginForm({\n            ...loginForm,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const login = async () => {\n        try {\n            const auditor = await loginAuditor(loginForm);\n            if (auditor.status === 200) {\n                const { email, password } = auditor.data;\n                localStorage.setItem('email', email);\n                history.push('/users')\n            } else {\n                setsnackbarOpenError(true)\n            }\n        } catch (error) {\n            setsnackbarOpenError(true)\n        }\n    }\n\n\n    const handleSnackBarCloseError = (event?: React.SyntheticEvent, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setsnackbarOpenError(false);\n    };\n\n\n    const renderSnackBar = () => (<Snackbar open={snackbarOpenError} autoHideDuration={10000} onClose={handleSnackBarCloseError}>\n        <Alert onClose={handleSnackBarCloseError} severity=\"error\">\n            Error Logging In\n        </Alert>\n    </Snackbar>)\n\n\n    return (\n        <div>\n            <Container maxWidth=\"sm\">\n                <Grid container spacing={3}>\n                    <Grid item xs={12} >\n                        <TextField label=\"Email\" type=\"email\" onChange={onFormFieldChange} name=\"email\" />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField label=\"Password\" type=\"password\" onChange={onFormFieldChange} name=\"password\" />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button color=\"primary\" variant=\"contained\" onClick={() => login()}>Login</Button>\n                    </Grid>\n                </Grid>\n            </Container>\n            {renderSnackBar()}\n        </div>\n    )\n}\n","import { Button, Container, Grid, TextField } from '@material-ui/core'\nimport React from 'react'\n\nexport default function Auditor() {\n    return (\n        <div>\n\n            <Container maxWidth=\"sm\">\n                <Grid container spacing={3}>\n                    <Grid item xs={12} >\n                        <TextField label=\"Email\" type=\"email\" />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField label=\"Password\" />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button color=\"primary\" variant=\"contained\">Login</Button>\n                    </Grid>\n                </Grid>\n            </Container>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport Upload from './components/upload';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducer from './reducers/index';\nimport { AppBar, Container, IconButton, List, ListItem, ListItemText, Toolbar } from '@material-ui/core';\nimport { Home } from '@material-ui/icons';\nimport Users from './components/users';\nimport FilesList from './components/comments-list';\nimport FileComments from './components/filecomments';\nimport Login from './components/login';\nimport Auditors from './components/auditors';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nconst store = createStore(reducer);\nconst useStyles = makeStyles({\n  navDisplayFlex: {\n    display: `flex`,\n    justifyContent: `space-between`\n  },\n  linkText: {\n    textDecoration: `none`,\n    textTransform: `uppercase`,\n    color: `white`\n  }\n});\n\nfunction App() {\n\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Routes />\n      </div>\n    </Provider>\n  );\n}\n\n\nconst Routes = () => {\n  const app = useSelector((state: any) => state)\n  const classes = useStyles();\n  const email = localStorage.getItem('email');\n  const history = useHistory();\n  return <Router>\n    <div>\n      <AppBar>\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"home\">\n            <Home fontSize=\"large\" />\n          </IconButton>\n          <List component=\"nav\" aria-labelledby=\"main navigation\" className={classes.navDisplayFlex}>\n            {email && email !== undefined && email !== null && email.length > 0 && <><ListItem button>\n              <Link to=\"/upload\" style={{ color: 'white', textDecoration: 'none' }}>\n                <ListItemText primary='Upload' />\n              </Link>\n            </ListItem>\n              <ListItem button>\n                <Link to=\"/users\" style={{ color: 'white', textDecoration: 'none' }}>\n                  <ListItemText primary='Users' />\n                </Link>\n              </ListItem></>}\n\n            {email && email !== undefined && email !== null && email.length > 0 ? <ListItem button>\n              <Link to=\"/logout\" style={{ color: 'white', textDecoration: 'none' }} onClick={() => {\n                localStorage.clear();\n                window.location.href = (window.location.origin);\n              }}>\n                <ListItemText primary='Logout' />\n              </Link>\n            </ListItem> : <ListItem button>\n                <Link to=\"/login\" style={{ color: 'white', textDecoration: 'none' }}>\n                  <ListItemText primary='Login' />\n                </Link>\n              </ListItem>}\n          </List>\n        </Toolbar>\n      </AppBar>\n      <Container style={{ marginTop: '100px' }}>\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/upload\">\n            <Upload />\n          </Route>\n          <Route path=\"/files\">\n            <FilesList />\n          </Route>\n          <Route path=\"/users\">\n            <Users />\n          </Route>\n          <Route path=\"/comments\">\n            <FileComments />\n          </Route>\n          <Route path=\"/auditors\">\n            <Auditors />\n          </Route>\n        </Switch>\n      </Container>\n    </div>\n  </Router>\n}\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}